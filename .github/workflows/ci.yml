on:
    push:
        branches:
            - main
    pull_request:

name: CI

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: "3.x"
            - name: Install dependencies
              run: |
                  echo "/home/runner/.local/bin" >> $GITHUB_PATH
                  sudo apt install libbluetooth-dev
                  python -m pip install --upgrade pip
                  pip install flake8
                  if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            - name: Lint with flake8
              run: |
                  # stop the build if there are Python syntax errors or undefined names
                  flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                  # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
                  flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    build:
        name: Build
        runs-on: ubuntu-latest
        needs: lint
        container:
            image: espressif/idf:release-v3.3
        steps:
            - name: Checkout sources
              uses: actions/checkout@v2

            - name: Checkout esp32-camera
              uses: actions/checkout@v2
              with:
                  repository: expressif/esp32-camera
                  path: components/esp32-camera
                  ref: 010709376a131c12c14bb074b6c5be82d2241338

            - name: build
              run: |
                  source $IDF_PATH/export.sh
                  make
                  cp build/bootloader/bootloader.bin .
                  cp build/uthar.bin .
                  cp build/partitions_singleapp.bin .
                  zip uthar.zip partitions_singleapp.bin bootloader.bin uthar.bin
              shell: bash

            - uses: actions/upload-artifact@v2
              with:
                  name: uthar.zip
                  path: uthar.zip
                  if-no-files-found: error

    publish:
        name: Create Release
        needs: build
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'
        steps:
            - uses: actions/download-artifact@v2
              with:
                  name: uthar.zip
            - uses: marvinpinto/action-automatic-releases@latest
              with:
                  repo_token: ${{ secrets.GITHUB_TOKEN }}
                  automatic_release_tag: nightly
                  prerelease: true
                  title: nightly
                  files: |
                      uthar.zip
